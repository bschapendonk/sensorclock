using Microsoft.Extensions.Hosting;
using Microsoft.Extensions.Logging;
using System;
using System.Device.I2c;
using System.Threading;
using System.Threading.Tasks;

namespace dotnet
{
    public class ClockWorker : BackgroundService
    {
        private const byte ADDR_ALLCALL = 0x70;
        private const byte ADDR_HOUR = 0x71;
        private const byte ADDR_MINUTE = 0x01;
        private const byte ADDR_SECOND = 0x02;
        private const byte AUTO_INCREMENT = 0x80;
        private const int DIMM_HOUR_BEGIN = 22;
        private const int DIMM_HOUR_END = 8;
        private const byte MODE1_ALLCALL = 0x01;
        private const byte MODE1_SLEEP = 0x10;
        private const byte MODE1_SUBADDR1 = 0x08;
        private const byte PWM_DEFAULT = 0x44;
        private const byte PWM_DIMM = 0x01;
        private const byte REGISTER_GRPPWM = 0x12;
        private const byte REGISTER_LEDOUT0 = 0x14;
        private const byte REGISTER_MODE1 = 0x00;
        private const byte REGISTER_PWM0 = 0x02;
        private I2cDevice _allcall;
        private I2cDevice _hour;
        private int _hourDisplayed = int.MaxValue;
        private I2cDevice _minute;
        private int _minuteDisplayed = int.MaxValue;
        private I2cDevice _second;
        private int _secondDisplayed = int.MaxValue;

        #region Mask

        private static readonly byte[][] DIGITS = {
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x00 },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF },
            new byte[]{ REGISTER_PWM0 | AUTO_INCREMENT, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0x00 }
        };

        #endregion Mask

        private readonly ILogger<ClockWorker> _logger;

        public ClockWorker(ILogger<ClockWorker> logger)
        {
            _logger = logger;
        }

        protected override async Task ExecuteAsync(CancellationToken stoppingToken)
        {
            await Init();
            while (!stoppingToken.IsCancellationRequested)
            {
                Tick();
                await Task.Delay(500, stoppingToken);
            }
        }

        private async Task Init()
        {
            _allcall = I2cDevice.Create(new I2cConnectionSettings(1, ADDR_ALLCALL));
            _allcall.Write(new byte[] { REGISTER_MODE1, MODE1_SUBADDR1 | MODE1_ALLCALL });
            await Task.Delay(10);
            _allcall.Write(new byte[] { REGISTER_GRPPWM, PWM_DEFAULT });
            _allcall.Write(new byte[] { REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
            _allcall.Write(new byte[] { REGISTER_LEDOUT0 | AUTO_INCREMENT, 0xFF, 0xFF, 0xFF, 0xFF });

            _hour = I2cDevice.Create(new I2cConnectionSettings(1, ADDR_HOUR));
            _minute = I2cDevice.Create(new I2cConnectionSettings(1, ADDR_MINUTE));
            _second = I2cDevice.Create(new I2cConnectionSettings(1, ADDR_SECOND));

            _minute.Write(new byte[] { REGISTER_MODE1, MODE1_ALLCALL });
            _second.Write(new byte[] { REGISTER_MODE1, MODE1_ALLCALL });
        }

        private void Tick()
        {
            var now = DateTime.Now;
            if (_second != null)
            {
                var second = new byte[17];
                Buffer.BlockCopy(DIGITS[now.Second], 0, second, 0, second.Length);
                if (_secondDisplayed != now.Second)
                {
                    _secondDisplayed = now.Second;
                }
                else
                {
                    second[11] = 0xFF;
                }
                _second.Write(second);

                if (_minute != null && _minuteDisplayed != now.Minute)
                {
                    _minuteDisplayed = now.Minute;
                    _minute.Write(DIGITS[_minuteDisplayed]);

                    if (_hour != null && _hourDisplayed != now.Hour)
                    {
                        _hourDisplayed = now.Hour;
                        _hour.Write(DIGITS[_hourDisplayed]);

                        if (now.Hour < DIMM_HOUR_END || now.Hour >= DIMM_HOUR_BEGIN)
                        {
                            _allcall.Write(new byte[] { REGISTER_GRPPWM, PWM_DIMM });
                        }
                        else
                        {
                            _allcall.Write(new byte[] { REGISTER_GRPPWM, PWM_DEFAULT });
                        }
                    }
                }
            }
        }

        public override void Dispose()
        {
            _hour?.Dispose();
            _minute?.Dispose();
            _second?.Dispose();

            _allcall?.Write(new byte[] { REGISTER_LEDOUT0 | AUTO_INCREMENT, 0x00, 0x00, 0x00, 0x00 });
            _allcall?.Write(new byte[] { REGISTER_PWM0 | AUTO_INCREMENT, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 });
            _allcall?.Write(new byte[] { REGISTER_MODE1, MODE1_SLEEP | MODE1_ALLCALL });
            _allcall?.Dispose();

            base.Dispose();
        }
    }
}
